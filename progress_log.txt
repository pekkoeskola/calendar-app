Interim Report Monday 6.3

Most of the core logic is now written, with some methods missing concrete implementations. Refactoring to come, but for now some features already work and so there is technically a working app through the CLI. At this point the only working command is browsing through weekly event summaries. No properly thought out testing efforts yet, but some toying around with the CLI and basic features of the CalendarApp class which seem to be working.

There is some deviation from the original technical plan already, namely the Interval and CalendarView classes which weren't really covered there. These two classes are actually next in line to likely be reworked. 

The biggest challenge so far was trying to figure out how to work with time and dates. Initally the plan was to use such tools as java.utils.Date and java.utils.GregorianCalendar but while looking for a solution to get them working I came across the new java.time package which is a much-improved approach to handling time, and proved to be a joy to use due to its more functional and scala-idiomatic nature.

Up till this point the project has used up around 10-15 working hours. I've been quite busy with other coursework, so I'm a bit behind on schedule, not having practiced scalaFX as much as I intended at this point. The goal is to resume working on the project some time next week, starting with the aforementioned task, since implementing the UI seems like the logical next step in terms of development of the app.

Interim Report Sunday 19.3

Development hasn't progressed significantly since the last report, as I've been quite busy with other coursework. This is not yet a huge problem though, since quite a bit of the groundwork has already been laid out. Still, it would soon be time for another sprint to make larger strides towards a complete app, since the halfway point in the schedule is on the horizon.

I have had some time to play around with ScalaFX however, and am starting to get the hang of it. As such, beginning to work on the GUI seems like the natural next step, particularly with a good portion of the background logic already implemented. This would align with the plan as well.

After the GUI begins to take shape, it will guide further development of the api between it and the background logic. Features such as saving and opening calendar files and search can wait until a working basic app is up and running.

Interim Report Wednesday 5.4 (late from 3.4)

I've been quite busy with other coursework and duties, so have not really made any botable progress since the last report. The same next steps stand that were laid out in the previous interim report.

I'm aware of the approaching deadline, so I will have to get on top of the project soon. Thankfully that should be possible towards the end of this week, and in the coming weeks it seems the workload for other courses has come down so I can start focusing on this project.

Interim Report Monday 18.4

I've made some progress on the GUI, finally gotten the hang of ScalaFX. Now in the process of connecting at least some of the application logic to the GUI. Still missing some details from the core logic implementation (most importantly file I/O). 

Still a long way to a completed project, but I don't see too many challenges ahead, mostly fairly standard development. Most of my time leading up to the deadline now is reserved for finishing it, so I'm not too worried yet about being able to finish everything on time, though I do still have to put in a good amount of hours.
